
0.0000: Sun Jun 15 2014
   - started an input model stack so we can do things like:
     - clish# config t
     - clish(config)#

0.0000: Sun Jun 01 2014
   - slept on it.  parse-for-execution shall have a final validation pass *AFTER* parse
   - parse shall always use heuristic validation
   - OK: I think I finally built it with two phase parse (tokenizer, then hand-rolled parser)
     AND: with a two-phase argument validator; go ahead and accept tokens/words
     that seem to be superficially correct; after we completely accept the
     parse, then check the arguments carefully and print all the errors.
   - added more error handlers in the validators

0.0000: Sat May 31 2014
   - added more documentations and came up with some basic strategies for tab-completion parsing
   - the parser can now return extraneous cruft
   - decided to pass options to validate to avoid hostname lookups (etc) during tab completion

0.0000: Thu May 29 2014
   - started adding real tests to the package … better place to test new parser things anyway

0.0000: Wed May 28 2014
   - got a SIGINT handler working reliably and correctly (by copying an example
     in the Term::ReadLine::Gnu distribution — actually started with
     AnyEvent::ReadLine::Gnu, but it's actually *less* clear)
   - I think I now definitely require the ::Gnu version of ReadLine though …
   - there, test for some things so we work under ::Perl
   - figured out how to actually do the tab completion from the example in ::Gnu/eg/perlsh
     [it's not obvious like you'd think]

0.0000: Sat May 26 2014
   - did boatloads of work on the parser (all week actualy)

0.0000: Sat May 17 2014
   - restructure the messaging system
   - built a really basic parser (with lots of fur and bugs)

0.0000: Sat May 17 2014
   - trying to get my thoughts together
   - wrote the very first shell loop
   - made a parser that loads commands (but doesn't parse anything, yet)
